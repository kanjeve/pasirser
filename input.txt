/*
* Asir Comprehensive Test Script
* This file tests various syntax features for the AST builder.
*/

/* Top-level statements: assignment and struct definition */
Version = 1.0;
struct Point { x, y };

/* Function definition with parameters */
def calculate(A, B) {
/* If-Else statement with logical and comparison operators */
    if (A > 0 && B > 0) {
        C = A^B; /* Power operator */
    } else {
        C = (A + B) * 2; /* Operator precedence with parentheses */
    }

/* For loop with initializer, condition, and updater */
    for (I = 0; I < 10; I++) {
        if (I == 5) {
            continue; /* Continue statement */
        }
        if (C < I) {
            break;    /* Break statement */
        }
        C = C - I;
    }

/* While and Do-While loops */
    while (A < 5) {
        A = A + 1;
    }
    do {
        B = B - 1;
    } while (B > 0);

/* Ternary operator, list literal, and index access assignment */
    L = [1, 2, 3];
    N = ltov(L);
    N[0] = (C > 10) ? 100 : -100;
    L = vtol(N);

/* Function call and return statement */
    print("Calculation finished");
    return [A, B, C, L];
}

/* Function call at the top level */
Result = calculate(Version, 5);

/* Module definition */
module myModule;
localf my_func;
endmodule;

/* Final expression statement */
"Test Completed";
