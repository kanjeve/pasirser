// Generated from /home/kanji/risaproject/pasirser/asir.g4 by ANTLR 4.13.1

import * as antlr from "antlr4ng";
import { Token } from "antlr4ng";


export class asirLexer extends antlr.Lexer {
    public static readonly LTLT = 1;
    public static readonly GTGT = 2;
    public static readonly COLON2 = 3;
    public static readonly INC = 4;
    public static readonly DEC = 5;
    public static readonly PLUSEQ = 6;
    public static readonly MINUSEQ = 7;
    public static readonly MULTEQ = 8;
    public static readonly DIVEQ = 9;
    public static readonly SUREQ = 10;
    public static readonly POWEREQ = 11;
    public static readonly ARROW = 12;
    public static readonly EQ = 13;
    public static readonly NEQ = 14;
    public static readonly LE = 15;
    public static readonly GE = 16;
    public static readonly LT = 17;
    public static readonly GT = 18;
    public static readonly AND = 19;
    public static readonly OR = 20;
    public static readonly NOT = 21;
    public static readonly PLUS = 22;
    public static readonly MINUS = 23;
    public static readonly MULT = 24;
    public static readonly DIV = 25;
    public static readonly SUR = 26;
    public static readonly POWER = 27;
    public static readonly ASSIGN = 28;
    public static readonly BACK = 29;
    public static readonly MID = 30;
    public static readonly LPAREN = 31;
    public static readonly RPAREN = 32;
    public static readonly LBRANCE = 33;
    public static readonly RBRANCE = 34;
    public static readonly LBRACKET = 35;
    public static readonly RBRACKET = 36;
    public static readonly QUESTION = 37;
    public static readonly COLON = 38;
    public static readonly SEMI = 39;
    public static readonly DOLLAR = 40;
    public static readonly COMMA = 41;
    public static readonly HEX = 42;
    public static readonly BIT = 43;
    public static readonly IMAGINARY = 44;
    public static readonly AEGEN = 45;
    public static readonly BEFORE = 46;
    public static readonly BEFORE_N = 47;
    public static readonly QE_1 = 48;
    public static readonly QE_2 = 49;
    public static readonly QE_3 = 50;
    public static readonly QE_4 = 51;
    public static readonly QE_5 = 52;
    public static readonly QE_6 = 53;
    public static readonly QE_7 = 54;
    public static readonly QE_8 = 55;
    public static readonly QE_9 = 56;
    public static readonly QE_10 = 57;
    public static readonly QE_11 = 58;
    public static readonly QE_12 = 59;
    public static readonly QE_IMPL = 60;
    public static readonly QE_REPL = 61;
    public static readonly QE_EQUIV = 62;
    public static readonly DEF = 63;
    public static readonly IF = 64;
    public static readonly FOR = 65;
    public static readonly WHILE = 66;
    public static readonly DO = 67;
    public static readonly ELSE = 68;
    public static readonly RETURN = 69;
    public static readonly CONTINUE = 70;
    public static readonly BREAK = 71;
    public static readonly STRUCT = 72;
    public static readonly MODULE = 73;
    public static readonly ENDMODULE = 74;
    public static readonly EXTERN = 75;
    public static readonly STATIC = 76;
    public static readonly GLOBAL = 77;
    public static readonly LOCAL = 78;
    public static readonly LOCALF = 79;
    public static readonly FUNCTION = 80;
    public static readonly ATFUNC = 81;
    public static readonly VAR_2 = 82;
    public static readonly ID = 83;
    public static readonly FLOAT = 84;
    public static readonly INT = 85;
    public static readonly DOT = 86;
    public static readonly NEWLINE = 87;
    public static readonly WS = 88;
    public static readonly COMMENT = 89;
    public static readonly LCOMMENT = 90;
    public static readonly PCOMMENT = 91;
    public static readonly PIFDEF = 92;
    public static readonly PIFNDEF = 93;
    public static readonly PIF = 94;
    public static readonly PELSE = 95;
    public static readonly PELIF = 96;
    public static readonly PENDIF = 97;
    public static readonly PINCLUDE = 98;
    public static readonly PDEFINE = 99;
    public static readonly CHARPLUS = 100;
    public static readonly CHAR = 101;
    public static readonly STRING = 102;
    public static readonly NOSTRING = 103;
    public static readonly SYSTEM_PATH_LITERAL = 104;

    public static readonly channelNames = [
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    ];

    public static readonly literalNames = [
        null, "'<<'", "'>>'", "'::'", "'++'", "'--'", "'+='", "'-='", "'*='", 
        "'/='", "'%='", "'^='", "'->'", "'=='", "'!='", "'<='", "'>='", 
        "'<'", "'>'", "'&&'", "'||'", "'!'", "'+'", "'-'", "'*'", "'/'", 
        "'%'", "'^'", "'='", "'`'", "'|'", "'('", "')'", "'{'", "'}'", "'['", 
        "']'", "'?'", "':'", "';'", "'$'", "','", null, null, "'@i'", "'@s'", 
        "'@@'", null, "'@>='", "'@<='", "'@>'", "'@<'", "'@=='", "'@='", 
        "'@!='", "'@!'", "'@&&'", "'@&'", "'@||'", "'@|'", "'@impl'", "'@repl'", 
        "'@equiv'", "'def'", "'if'", "'for'", "'while'", "'do'", "'else'", 
        "'return'", "'continue'", "'break'", "'struct'", "'module'", "'endmodule'", 
        "'extern'", "'static'", "'global'", "'local'", "'localf'", "'function'", 
        null, "'@'", null, null, null, "'.'", "'\\n'", null, null, null, 
        null, "'#ifdef'", "'#ifndef'", "'#if'", "'#else'", "'#elif'", "'#endif'", 
        "'#include'", "'#define'", "'##'", "'#'"
    ];

    public static readonly symbolicNames = [
        null, "LTLT", "GTGT", "COLON2", "INC", "DEC", "PLUSEQ", "MINUSEQ", 
        "MULTEQ", "DIVEQ", "SUREQ", "POWEREQ", "ARROW", "EQ", "NEQ", "LE", 
        "GE", "LT", "GT", "AND", "OR", "NOT", "PLUS", "MINUS", "MULT", "DIV", 
        "SUR", "POWER", "ASSIGN", "BACK", "MID", "LPAREN", "RPAREN", "LBRANCE", 
        "RBRANCE", "LBRACKET", "RBRACKET", "QUESTION", "COLON", "SEMI", 
        "DOLLAR", "COMMA", "HEX", "BIT", "IMAGINARY", "AEGEN", "BEFORE", 
        "BEFORE_N", "QE_1", "QE_2", "QE_3", "QE_4", "QE_5", "QE_6", "QE_7", 
        "QE_8", "QE_9", "QE_10", "QE_11", "QE_12", "QE_IMPL", "QE_REPL", 
        "QE_EQUIV", "DEF", "IF", "FOR", "WHILE", "DO", "ELSE", "RETURN", 
        "CONTINUE", "BREAK", "STRUCT", "MODULE", "ENDMODULE", "EXTERN", 
        "STATIC", "GLOBAL", "LOCAL", "LOCALF", "FUNCTION", "ATFUNC", "VAR_2", 
        "ID", "FLOAT", "INT", "DOT", "NEWLINE", "WS", "COMMENT", "LCOMMENT", 
        "PCOMMENT", "PIFDEF", "PIFNDEF", "PIF", "PELSE", "PELIF", "PENDIF", 
        "PINCLUDE", "PDEFINE", "CHARPLUS", "CHAR", "STRING", "NOSTRING", 
        "SYSTEM_PATH_LITERAL"
    ];

    public static readonly modeNames = [
        "DEFAULT_MODE",
    ];

    public static readonly ruleNames = [
        "LTLT", "GTGT", "COLON2", "INC", "DEC", "PLUSEQ", "MINUSEQ", "MULTEQ", 
        "DIVEQ", "SUREQ", "POWEREQ", "ARROW", "EQ", "NEQ", "LE", "GE", "LT", 
        "GT", "AND", "OR", "NOT", "PLUS", "MINUS", "MULT", "DIV", "SUR", 
        "POWER", "ASSIGN", "BACK", "MID", "LPAREN", "RPAREN", "LBRANCE", 
        "RBRANCE", "LBRACKET", "RBRACKET", "QUESTION", "COLON", "SEMI", 
        "DOLLAR", "COMMA", "HEX", "BIT", "IMAGINARY", "AEGEN", "BEFORE", 
        "BEFORE_N", "QE_1", "QE_2", "QE_3", "QE_4", "QE_5", "QE_6", "QE_7", 
        "QE_8", "QE_9", "QE_10", "QE_11", "QE_12", "QE_IMPL", "QE_REPL", 
        "QE_EQUIV", "DEF", "IF", "FOR", "WHILE", "DO", "ELSE", "RETURN", 
        "CONTINUE", "BREAK", "STRUCT", "MODULE", "ENDMODULE", "EXTERN", 
        "STATIC", "GLOBAL", "LOCAL", "LOCALF", "FUNCTION", "ATFUNC", "VAR_2", 
        "ID", "FLOAT", "INT", "DOT", "NEWLINE", "WS", "COMMENT", "LCOMMENT", 
        "PCOMMENT", "PIFDEF", "PIFNDEF", "PIF", "PELSE", "PELIF", "PENDIF", 
        "PINCLUDE", "PDEFINE", "CHARPLUS", "CHAR", "STRING", "NOSTRING", 
        "SYSTEM_PATH_LITERAL", "EXPONENT",
    ];


    public constructor(input: antlr.CharStream) {
        super(input);
        this.interpreter = new antlr.LexerATNSimulator(this, asirLexer._ATN, asirLexer.decisionsToDFA, new antlr.PredictionContextCache());
    }

    public get grammarFileName(): string { return "asir.g4"; }

    public get literalNames(): (string | null)[] { return asirLexer.literalNames; }
    public get symbolicNames(): (string | null)[] { return asirLexer.symbolicNames; }
    public get ruleNames(): string[] { return asirLexer.ruleNames; }

    public get serializedATN(): number[] { return asirLexer._serializedATN; }

    public get channelNames(): string[] { return asirLexer.channelNames; }

    public get modeNames(): string[] { return asirLexer.modeNames; }

    public static readonly _serializedATN: number[] = [
        4,0,104,728,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,
        97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,
        7,103,2,104,7,104,1,0,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,
        3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,
        9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,12,1,13,1,13,
        1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,
        1,18,1,19,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,
        1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,
        1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,
        1,37,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,5,41,315,8,41,
        10,41,12,41,318,9,41,1,42,1,42,1,42,5,42,323,8,42,10,42,12,42,326,
        9,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,4,46,
        339,8,46,11,46,12,46,340,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,
        1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,
        1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,
        1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,
        1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,
        1,61,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,65,
        1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,
        1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,
        1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,
        1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,
        1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,
        1,74,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,
        1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,
        1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,80,1,80,
        4,80,520,8,80,11,80,12,80,521,1,81,1,81,1,82,3,82,527,8,82,1,82,
        1,82,5,82,531,8,82,10,82,12,82,534,9,82,1,83,4,83,537,8,83,11,83,
        12,83,538,1,83,1,83,5,83,543,8,83,10,83,12,83,546,9,83,1,83,3,83,
        549,8,83,1,83,1,83,5,83,553,8,83,10,83,12,83,556,9,83,1,83,3,83,
        559,8,83,1,83,4,83,562,8,83,11,83,12,83,563,1,83,3,83,567,8,83,1,
        84,4,84,570,8,84,11,84,12,84,571,1,85,1,85,1,86,1,86,1,86,1,86,1,
        87,4,87,581,8,87,11,87,12,87,582,1,87,1,87,1,88,1,88,1,88,1,88,5,
        88,591,8,88,10,88,12,88,594,9,88,1,88,1,88,1,88,1,88,1,88,1,89,1,
        89,1,89,1,89,5,89,605,8,89,10,89,12,89,608,9,89,1,89,1,89,1,90,1,
        90,1,90,1,90,1,90,1,90,1,90,5,90,619,8,90,10,90,12,90,622,9,90,1,
        90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,91,1,91,1,91,1,91,1,
        91,1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,92,1,93,1,93,1,
        93,1,93,1,94,1,94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,
        95,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,97,1,97,1,97,1,97,1,97,1,
        97,1,97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,98,1,99,1,
        99,1,99,1,100,1,100,1,101,1,101,5,101,695,8,101,10,101,12,101,698,
        9,101,1,101,1,101,1,102,1,102,5,102,704,8,102,10,102,12,102,707,
        9,102,1,102,1,102,1,103,1,103,4,103,713,8,103,11,103,12,103,714,
        1,103,1,103,1,104,1,104,3,104,721,8,104,1,104,5,104,724,8,104,10,
        104,12,104,727,9,104,4,592,620,696,705,0,105,1,1,3,2,5,3,7,4,9,5,
        11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
        17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,
        28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
        39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,
        50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,
        119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,
        69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,
        157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,
        88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,
        195,98,197,99,199,100,201,101,203,102,205,103,207,104,209,0,1,0,
        12,2,0,88,88,120,120,1,0,48,57,2,0,66,66,98,98,2,0,65,90,97,122,
        1,0,95,95,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,
        0,9,9,32,32,2,0,10,10,13,13,5,0,45,57,65,90,92,92,95,95,97,122,2,
        0,69,69,101,101,2,0,43,43,45,45,750,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
        0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
        0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
        0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
        0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,
        0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
        0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,
        0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,
        0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
        1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,
        0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,
        0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,
        133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,
        0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,
        1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,
        0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,
        0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,
        179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,
        0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,
        1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,
        0,207,1,0,0,0,1,211,1,0,0,0,3,214,1,0,0,0,5,217,1,0,0,0,7,220,1,
        0,0,0,9,223,1,0,0,0,11,226,1,0,0,0,13,229,1,0,0,0,15,232,1,0,0,0,
        17,235,1,0,0,0,19,238,1,0,0,0,21,241,1,0,0,0,23,244,1,0,0,0,25,247,
        1,0,0,0,27,250,1,0,0,0,29,253,1,0,0,0,31,256,1,0,0,0,33,259,1,0,
        0,0,35,261,1,0,0,0,37,263,1,0,0,0,39,266,1,0,0,0,41,269,1,0,0,0,
        43,271,1,0,0,0,45,273,1,0,0,0,47,275,1,0,0,0,49,277,1,0,0,0,51,279,
        1,0,0,0,53,281,1,0,0,0,55,283,1,0,0,0,57,285,1,0,0,0,59,287,1,0,
        0,0,61,289,1,0,0,0,63,291,1,0,0,0,65,293,1,0,0,0,67,295,1,0,0,0,
        69,297,1,0,0,0,71,299,1,0,0,0,73,301,1,0,0,0,75,303,1,0,0,0,77,305,
        1,0,0,0,79,307,1,0,0,0,81,309,1,0,0,0,83,311,1,0,0,0,85,319,1,0,
        0,0,87,327,1,0,0,0,89,330,1,0,0,0,91,333,1,0,0,0,93,336,1,0,0,0,
        95,342,1,0,0,0,97,346,1,0,0,0,99,350,1,0,0,0,101,353,1,0,0,0,103,
        356,1,0,0,0,105,360,1,0,0,0,107,363,1,0,0,0,109,367,1,0,0,0,111,
        370,1,0,0,0,113,374,1,0,0,0,115,377,1,0,0,0,117,381,1,0,0,0,119,
        384,1,0,0,0,121,390,1,0,0,0,123,396,1,0,0,0,125,403,1,0,0,0,127,
        407,1,0,0,0,129,410,1,0,0,0,131,414,1,0,0,0,133,420,1,0,0,0,135,
        423,1,0,0,0,137,428,1,0,0,0,139,435,1,0,0,0,141,444,1,0,0,0,143,
        450,1,0,0,0,145,457,1,0,0,0,147,464,1,0,0,0,149,474,1,0,0,0,151,
        481,1,0,0,0,153,488,1,0,0,0,155,495,1,0,0,0,157,501,1,0,0,0,159,
        508,1,0,0,0,161,517,1,0,0,0,163,523,1,0,0,0,165,526,1,0,0,0,167,
        566,1,0,0,0,169,569,1,0,0,0,171,573,1,0,0,0,173,575,1,0,0,0,175,
        580,1,0,0,0,177,586,1,0,0,0,179,600,1,0,0,0,181,611,1,0,0,0,183,
        632,1,0,0,0,185,639,1,0,0,0,187,647,1,0,0,0,189,651,1,0,0,0,191,
        657,1,0,0,0,193,663,1,0,0,0,195,670,1,0,0,0,197,679,1,0,0,0,199,
        687,1,0,0,0,201,690,1,0,0,0,203,692,1,0,0,0,205,701,1,0,0,0,207,
        710,1,0,0,0,209,718,1,0,0,0,211,212,5,60,0,0,212,213,5,60,0,0,213,
        2,1,0,0,0,214,215,5,62,0,0,215,216,5,62,0,0,216,4,1,0,0,0,217,218,
        5,58,0,0,218,219,5,58,0,0,219,6,1,0,0,0,220,221,5,43,0,0,221,222,
        5,43,0,0,222,8,1,0,0,0,223,224,5,45,0,0,224,225,5,45,0,0,225,10,
        1,0,0,0,226,227,5,43,0,0,227,228,5,61,0,0,228,12,1,0,0,0,229,230,
        5,45,0,0,230,231,5,61,0,0,231,14,1,0,0,0,232,233,5,42,0,0,233,234,
        5,61,0,0,234,16,1,0,0,0,235,236,5,47,0,0,236,237,5,61,0,0,237,18,
        1,0,0,0,238,239,5,37,0,0,239,240,5,61,0,0,240,20,1,0,0,0,241,242,
        5,94,0,0,242,243,5,61,0,0,243,22,1,0,0,0,244,245,5,45,0,0,245,246,
        5,62,0,0,246,24,1,0,0,0,247,248,5,61,0,0,248,249,5,61,0,0,249,26,
        1,0,0,0,250,251,5,33,0,0,251,252,5,61,0,0,252,28,1,0,0,0,253,254,
        5,60,0,0,254,255,5,61,0,0,255,30,1,0,0,0,256,257,5,62,0,0,257,258,
        5,61,0,0,258,32,1,0,0,0,259,260,5,60,0,0,260,34,1,0,0,0,261,262,
        5,62,0,0,262,36,1,0,0,0,263,264,5,38,0,0,264,265,5,38,0,0,265,38,
        1,0,0,0,266,267,5,124,0,0,267,268,5,124,0,0,268,40,1,0,0,0,269,270,
        5,33,0,0,270,42,1,0,0,0,271,272,5,43,0,0,272,44,1,0,0,0,273,274,
        5,45,0,0,274,46,1,0,0,0,275,276,5,42,0,0,276,48,1,0,0,0,277,278,
        5,47,0,0,278,50,1,0,0,0,279,280,5,37,0,0,280,52,1,0,0,0,281,282,
        5,94,0,0,282,54,1,0,0,0,283,284,5,61,0,0,284,56,1,0,0,0,285,286,
        5,96,0,0,286,58,1,0,0,0,287,288,5,124,0,0,288,60,1,0,0,0,289,290,
        5,40,0,0,290,62,1,0,0,0,291,292,5,41,0,0,292,64,1,0,0,0,293,294,
        5,123,0,0,294,66,1,0,0,0,295,296,5,125,0,0,296,68,1,0,0,0,297,298,
        5,91,0,0,298,70,1,0,0,0,299,300,5,93,0,0,300,72,1,0,0,0,301,302,
        5,63,0,0,302,74,1,0,0,0,303,304,5,58,0,0,304,76,1,0,0,0,305,306,
        5,59,0,0,306,78,1,0,0,0,307,308,5,36,0,0,308,80,1,0,0,0,309,310,
        5,44,0,0,310,82,1,0,0,0,311,312,5,48,0,0,312,316,7,0,0,0,313,315,
        7,1,0,0,314,313,1,0,0,0,315,318,1,0,0,0,316,314,1,0,0,0,316,317,
        1,0,0,0,317,84,1,0,0,0,318,316,1,0,0,0,319,320,5,48,0,0,320,324,
        7,2,0,0,321,323,7,1,0,0,322,321,1,0,0,0,323,326,1,0,0,0,324,322,
        1,0,0,0,324,325,1,0,0,0,325,86,1,0,0,0,326,324,1,0,0,0,327,328,5,
        64,0,0,328,329,5,105,0,0,329,88,1,0,0,0,330,331,5,64,0,0,331,332,
        5,115,0,0,332,90,1,0,0,0,333,334,5,64,0,0,334,335,5,64,0,0,335,92,
        1,0,0,0,336,338,5,64,0,0,337,339,7,1,0,0,338,337,1,0,0,0,339,340,
        1,0,0,0,340,338,1,0,0,0,340,341,1,0,0,0,341,94,1,0,0,0,342,343,5,
        64,0,0,343,344,5,62,0,0,344,345,5,61,0,0,345,96,1,0,0,0,346,347,
        5,64,0,0,347,348,5,60,0,0,348,349,5,61,0,0,349,98,1,0,0,0,350,351,
        5,64,0,0,351,352,5,62,0,0,352,100,1,0,0,0,353,354,5,64,0,0,354,355,
        5,60,0,0,355,102,1,0,0,0,356,357,5,64,0,0,357,358,5,61,0,0,358,359,
        5,61,0,0,359,104,1,0,0,0,360,361,5,64,0,0,361,362,5,61,0,0,362,106,
        1,0,0,0,363,364,5,64,0,0,364,365,5,33,0,0,365,366,5,61,0,0,366,108,
        1,0,0,0,367,368,5,64,0,0,368,369,5,33,0,0,369,110,1,0,0,0,370,371,
        5,64,0,0,371,372,5,38,0,0,372,373,5,38,0,0,373,112,1,0,0,0,374,375,
        5,64,0,0,375,376,5,38,0,0,376,114,1,0,0,0,377,378,5,64,0,0,378,379,
        5,124,0,0,379,380,5,124,0,0,380,116,1,0,0,0,381,382,5,64,0,0,382,
        383,5,124,0,0,383,118,1,0,0,0,384,385,5,64,0,0,385,386,5,105,0,0,
        386,387,5,109,0,0,387,388,5,112,0,0,388,389,5,108,0,0,389,120,1,
        0,0,0,390,391,5,64,0,0,391,392,5,114,0,0,392,393,5,101,0,0,393,394,
        5,112,0,0,394,395,5,108,0,0,395,122,1,0,0,0,396,397,5,64,0,0,397,
        398,5,101,0,0,398,399,5,113,0,0,399,400,5,117,0,0,400,401,5,105,
        0,0,401,402,5,118,0,0,402,124,1,0,0,0,403,404,5,100,0,0,404,405,
        5,101,0,0,405,406,5,102,0,0,406,126,1,0,0,0,407,408,5,105,0,0,408,
        409,5,102,0,0,409,128,1,0,0,0,410,411,5,102,0,0,411,412,5,111,0,
        0,412,413,5,114,0,0,413,130,1,0,0,0,414,415,5,119,0,0,415,416,5,
        104,0,0,416,417,5,105,0,0,417,418,5,108,0,0,418,419,5,101,0,0,419,
        132,1,0,0,0,420,421,5,100,0,0,421,422,5,111,0,0,422,134,1,0,0,0,
        423,424,5,101,0,0,424,425,5,108,0,0,425,426,5,115,0,0,426,427,5,
        101,0,0,427,136,1,0,0,0,428,429,5,114,0,0,429,430,5,101,0,0,430,
        431,5,116,0,0,431,432,5,117,0,0,432,433,5,114,0,0,433,434,5,110,
        0,0,434,138,1,0,0,0,435,436,5,99,0,0,436,437,5,111,0,0,437,438,5,
        110,0,0,438,439,5,116,0,0,439,440,5,105,0,0,440,441,5,110,0,0,441,
        442,5,117,0,0,442,443,5,101,0,0,443,140,1,0,0,0,444,445,5,98,0,0,
        445,446,5,114,0,0,446,447,5,101,0,0,447,448,5,97,0,0,448,449,5,107,
        0,0,449,142,1,0,0,0,450,451,5,115,0,0,451,452,5,116,0,0,452,453,
        5,114,0,0,453,454,5,117,0,0,454,455,5,99,0,0,455,456,5,116,0,0,456,
        144,1,0,0,0,457,458,5,109,0,0,458,459,5,111,0,0,459,460,5,100,0,
        0,460,461,5,117,0,0,461,462,5,108,0,0,462,463,5,101,0,0,463,146,
        1,0,0,0,464,465,5,101,0,0,465,466,5,110,0,0,466,467,5,100,0,0,467,
        468,5,109,0,0,468,469,5,111,0,0,469,470,5,100,0,0,470,471,5,117,
        0,0,471,472,5,108,0,0,472,473,5,101,0,0,473,148,1,0,0,0,474,475,
        5,101,0,0,475,476,5,120,0,0,476,477,5,116,0,0,477,478,5,101,0,0,
        478,479,5,114,0,0,479,480,5,110,0,0,480,150,1,0,0,0,481,482,5,115,
        0,0,482,483,5,116,0,0,483,484,5,97,0,0,484,485,5,116,0,0,485,486,
        5,105,0,0,486,487,5,99,0,0,487,152,1,0,0,0,488,489,5,103,0,0,489,
        490,5,108,0,0,490,491,5,111,0,0,491,492,5,98,0,0,492,493,5,97,0,
        0,493,494,5,108,0,0,494,154,1,0,0,0,495,496,5,108,0,0,496,497,5,
        111,0,0,497,498,5,99,0,0,498,499,5,97,0,0,499,500,5,108,0,0,500,
        156,1,0,0,0,501,502,5,108,0,0,502,503,5,111,0,0,503,504,5,99,0,0,
        504,505,5,97,0,0,505,506,5,108,0,0,506,507,5,102,0,0,507,158,1,0,
        0,0,508,509,5,102,0,0,509,510,5,117,0,0,510,511,5,110,0,0,511,512,
        5,99,0,0,512,513,5,116,0,0,513,514,5,105,0,0,514,515,5,111,0,0,515,
        516,5,110,0,0,516,160,1,0,0,0,517,519,5,64,0,0,518,520,7,3,0,0,519,
        518,1,0,0,0,520,521,1,0,0,0,521,519,1,0,0,0,521,522,1,0,0,0,522,
        162,1,0,0,0,523,524,5,64,0,0,524,164,1,0,0,0,525,527,7,4,0,0,526,
        525,1,0,0,0,526,527,1,0,0,0,527,528,1,0,0,0,528,532,7,5,0,0,529,
        531,7,6,0,0,530,529,1,0,0,0,531,534,1,0,0,0,532,530,1,0,0,0,532,
        533,1,0,0,0,533,166,1,0,0,0,534,532,1,0,0,0,535,537,7,1,0,0,536,
        535,1,0,0,0,537,538,1,0,0,0,538,536,1,0,0,0,538,539,1,0,0,0,539,
        540,1,0,0,0,540,544,5,46,0,0,541,543,7,1,0,0,542,541,1,0,0,0,543,
        546,1,0,0,0,544,542,1,0,0,0,544,545,1,0,0,0,545,548,1,0,0,0,546,
        544,1,0,0,0,547,549,3,209,104,0,548,547,1,0,0,0,548,549,1,0,0,0,
        549,567,1,0,0,0,550,554,5,46,0,0,551,553,7,1,0,0,552,551,1,0,0,0,
        553,556,1,0,0,0,554,552,1,0,0,0,554,555,1,0,0,0,555,558,1,0,0,0,
        556,554,1,0,0,0,557,559,3,209,104,0,558,557,1,0,0,0,558,559,1,0,
        0,0,559,567,1,0,0,0,560,562,7,1,0,0,561,560,1,0,0,0,562,563,1,0,
        0,0,563,561,1,0,0,0,563,564,1,0,0,0,564,565,1,0,0,0,565,567,3,209,
        104,0,566,536,1,0,0,0,566,550,1,0,0,0,566,561,1,0,0,0,567,168,1,
        0,0,0,568,570,7,1,0,0,569,568,1,0,0,0,570,571,1,0,0,0,571,569,1,
        0,0,0,571,572,1,0,0,0,572,170,1,0,0,0,573,574,5,46,0,0,574,172,1,
        0,0,0,575,576,5,10,0,0,576,577,1,0,0,0,577,578,6,86,0,0,578,174,
        1,0,0,0,579,581,7,7,0,0,580,579,1,0,0,0,581,582,1,0,0,0,582,580,
        1,0,0,0,582,583,1,0,0,0,583,584,1,0,0,0,584,585,6,87,0,0,585,176,
        1,0,0,0,586,587,5,47,0,0,587,588,5,42,0,0,588,592,1,0,0,0,589,591,
        9,0,0,0,590,589,1,0,0,0,591,594,1,0,0,0,592,593,1,0,0,0,592,590,
        1,0,0,0,593,595,1,0,0,0,594,592,1,0,0,0,595,596,5,42,0,0,596,597,
        5,47,0,0,597,598,1,0,0,0,598,599,6,88,0,0,599,178,1,0,0,0,600,601,
        5,47,0,0,601,602,5,47,0,0,602,606,1,0,0,0,603,605,8,8,0,0,604,603,
        1,0,0,0,605,608,1,0,0,0,606,604,1,0,0,0,606,607,1,0,0,0,607,609,
        1,0,0,0,608,606,1,0,0,0,609,610,6,89,0,0,610,180,1,0,0,0,611,612,
        5,35,0,0,612,613,5,105,0,0,613,614,5,102,0,0,614,615,5,32,0,0,615,
        616,5,48,0,0,616,620,1,0,0,0,617,619,9,0,0,0,618,617,1,0,0,0,619,
        622,1,0,0,0,620,621,1,0,0,0,620,618,1,0,0,0,621,623,1,0,0,0,622,
        620,1,0,0,0,623,624,5,35,0,0,624,625,5,101,0,0,625,626,5,110,0,0,
        626,627,5,100,0,0,627,628,5,105,0,0,628,629,5,102,0,0,629,630,1,
        0,0,0,630,631,6,90,0,0,631,182,1,0,0,0,632,633,5,35,0,0,633,634,
        5,105,0,0,634,635,5,102,0,0,635,636,5,100,0,0,636,637,5,101,0,0,
        637,638,5,102,0,0,638,184,1,0,0,0,639,640,5,35,0,0,640,641,5,105,
        0,0,641,642,5,102,0,0,642,643,5,110,0,0,643,644,5,100,0,0,644,645,
        5,101,0,0,645,646,5,102,0,0,646,186,1,0,0,0,647,648,5,35,0,0,648,
        649,5,105,0,0,649,650,5,102,0,0,650,188,1,0,0,0,651,652,5,35,0,0,
        652,653,5,101,0,0,653,654,5,108,0,0,654,655,5,115,0,0,655,656,5,
        101,0,0,656,190,1,0,0,0,657,658,5,35,0,0,658,659,5,101,0,0,659,660,
        5,108,0,0,660,661,5,105,0,0,661,662,5,102,0,0,662,192,1,0,0,0,663,
        664,5,35,0,0,664,665,5,101,0,0,665,666,5,110,0,0,666,667,5,100,0,
        0,667,668,5,105,0,0,668,669,5,102,0,0,669,194,1,0,0,0,670,671,5,
        35,0,0,671,672,5,105,0,0,672,673,5,110,0,0,673,674,5,99,0,0,674,
        675,5,108,0,0,675,676,5,117,0,0,676,677,5,100,0,0,677,678,5,101,
        0,0,678,196,1,0,0,0,679,680,5,35,0,0,680,681,5,100,0,0,681,682,5,
        101,0,0,682,683,5,102,0,0,683,684,5,105,0,0,684,685,5,110,0,0,685,
        686,5,101,0,0,686,198,1,0,0,0,687,688,5,35,0,0,688,689,5,35,0,0,
        689,200,1,0,0,0,690,691,5,35,0,0,691,202,1,0,0,0,692,696,5,34,0,
        0,693,695,9,0,0,0,694,693,1,0,0,0,695,698,1,0,0,0,696,697,1,0,0,
        0,696,694,1,0,0,0,697,699,1,0,0,0,698,696,1,0,0,0,699,700,5,34,0,
        0,700,204,1,0,0,0,701,705,5,39,0,0,702,704,9,0,0,0,703,702,1,0,0,
        0,704,707,1,0,0,0,705,706,1,0,0,0,705,703,1,0,0,0,706,708,1,0,0,
        0,707,705,1,0,0,0,708,709,5,39,0,0,709,206,1,0,0,0,710,712,5,60,
        0,0,711,713,7,9,0,0,712,711,1,0,0,0,713,714,1,0,0,0,714,712,1,0,
        0,0,714,715,1,0,0,0,715,716,1,0,0,0,716,717,5,62,0,0,717,208,1,0,
        0,0,718,720,7,10,0,0,719,721,7,11,0,0,720,719,1,0,0,0,720,721,1,
        0,0,0,721,725,1,0,0,0,722,724,7,1,0,0,723,722,1,0,0,0,724,727,1,
        0,0,0,725,723,1,0,0,0,725,726,1,0,0,0,726,210,1,0,0,0,727,725,1,
        0,0,0,24,0,316,324,340,521,526,532,538,544,548,554,558,563,566,571,
        582,592,606,620,696,705,714,720,725,1,6,0,0
    ];

    private static __ATN: antlr.ATN;
    public static get _ATN(): antlr.ATN {
        if (!asirLexer.__ATN) {
            asirLexer.__ATN = new antlr.ATNDeserializer().deserialize(asirLexer._serializedATN);
        }

        return asirLexer.__ATN;
    }


    private static readonly vocabulary = new antlr.Vocabulary(asirLexer.literalNames, asirLexer.symbolicNames, []);

    public override get vocabulary(): antlr.Vocabulary {
        return asirLexer.vocabulary;
    }

    private static readonly decisionsToDFA = asirLexer._ATN.decisionToState.map( (ds: antlr.DecisionState, index: number) => new antlr.DFA(ds, index) );
}